If (any error)
    Search google
    If (not found on google)
        Ask to mentor
Else
   Do your work.
*you should know "why" it occured even if you can fix it or not. :)



___________________________________________________________________________________________________________________________
# 04/01/2021 to 07/01/2021
..Git commands
..CLI commands
..Git-Flow
..12Factor
..Laravel setup with sqlite (with auth) (with markdown)
..Laravel setup with MySql docker (with auth)
	..@yield('text')
	..@extends('view_name')
	..@section('text')
	..@endsection
	..{{asset('css/app.css')}}
	
	
######################################################

I. Codebase
One codebase tracked in revision control, many deploys
((our repo will be hosted in github, so it is going to pass this factor))

II. Dependencies
Explicitly declare and isolate dependencies
((we are using docker, hence no dependency issues will be there.))

III. Config
Store config in the environment
((our app will be in docker,so there will be no config issues.))

IV. Backing services
Treat backing services as attached resources.
((docker will be there..! or in laravel we can make a separate ".env" file for development and release.))

V. Build, release, run
Strictly separate build and run stages
(())

VI. Processes
Execute the app as one or more stateless processes.(Twelve-factor processes are stateless and share-nothing.)
(())

VII. Port binding
Export services via port binding
((we are running all in one docker!!!))

VIII. Concurrency
Scale out via the process model(In the twelve-factor app, processes are a first class citizen. Processes in the twelve-factor app take strong cues from the unix process model for running service daemons. )
(())

IX. Disposability
Maximize robustness with fast startup and graceful shutdown
((docker!!! is easy to start and stop once setup.))

X. Dev/prod parity
Keep development, staging, and production as similar as possible
(())

XI. Logs
Treat logs as event streams
((tail -f log1.log))

XII. Admin processes
Run admin/management tasks as one-off processes
(())
######################################################	
	
	
	
____________________________________________________________________________________
# 08/01/2021
..Laravel directory structure
	..app/Http/Controllers/ (Controller)
	..app/Models/  (Models for database)
	..resources/views/ (Views)

	[Create database model first and migrate it, then create View , and then Controller for handling data and flow. ...define routes in "web.php"]


#web.php
Route::get('/url',function_or_controller)
Route::post('/url',another_function_or_controller)  //import controller before using it
..some other http methods also..........

#Controllerz
return view('view_name')


	..@if()
	..@else
	..@endif
	..@auth
	..@endauth
	..@guest
	..@endguest
	..@error
	..@enderror
	..dd()
	..auth()->
	..redirect()->route('view_name')
	..back()
	..session('session_var')
	..route('view_name')
	..Middleware in "Kernel.php"
	..auth()->attempt([email,password],remember) //arguments are preceded by  request->
	..controller functions has (Request $request) argument when need to get data from user.
	..php artisan make:controller controller_name  [after you can edit it]
	..php artisan make:model model_name -m -f   [migration/factory//use --help for more info]        [after you can edit it]
		..
		..foreignId()->constrained()->onDelete()/id()/text()/timestamps()

#successfully created table using model and migration in MySql


____________________________________________________________________________________

# 11/01/2021
..use name() method in Route and route('name') in view.
..request->get('name_of_field')
..validate([]);
..{{old('name')}}   //retrive data of old session
..auth()->attempt(email,password as list)
..Creating a CRUD app for practice




........12 FACTOR MEETING...........
codebase
dependencies
config
resource as backing services


____________________________________________________________________________________





						  .env
						    |                        |
						    |                        |                   
						    |                        |
						    |conf1.service1          |  					
						    |___________             |
						    |                        | 					 service 1
						    |                        |
						    |                        |
						    |conf2.service2          | 						service 2
						    |______________          |	
						    |                        |
						    |                        |					service n
						    |                        | 
						    |                        |
						    |                        |
						    |						 |
						    |						 |

_______________________  		     _______________           				______________________

MAIN DRIVER CODE                     WRAPPER CLASS                             (external services like google facebook)
(written by us                       (written by us )
 and not changed even       		(new functions added
service provider changes.)           for new services)
                                     (SCALABILITY comes from here)
()
________________________________________________________________________________________________________________________________________

#12/11/2021

Laravel practice project (https://www.youtube.com/watch?v=MFh0Fd7BsjE)

........12 FACTOR MEETING...........
build,release , run
Concurrency
Processes
Disposability

....................................

command -m-f....means migration/factory,,,,,-msfc means migration/seeder/factory/controller
				..controller handles functions, data processing.
				..factory is for testing database. table definition is here.
				..seeder is for testing database. it uses table definition given in factory to insert data.
				..migration defines table structure to be created or changed in database. 


___________________________________________________________________________________________________________________________________________________
#13/01/2021

....
12 factors
logs
admin process
dev/prod parity
port binding
....


@if()
@elseif()
@else
@endif
@unless
@endunless
@php
@endphp
@for($i=0;$i<5;$i++)
@endfor
@foreach($pizzas as $pizza)
@endforeach
..query parameters
..create model and then..
	..$table='table_name' 


_________________________________________________________________________________________________________________________________________________
#14/01/2021
..reproduced 'students' error. (SQLSTATE[42S02]: Base table or view not found: 1146 Table 'Laravel.students' doesn't exist (SQL: select * from `students`))
	..database table = student //migrations are already up-to-date 
	CAUSE->(laravel looks for 'users' table in database for 'User' model. 'Name' model refers to 'names' table in database.)
	SOLUTION->(in model define $table='name' or rename 'name' to 'names')

..'timestamps' error..
	CAUSE->(it looks for timestamps by default)
	SOLUTION->($timestamps->false)
..CRUD done....(used Naman's repo for some function reference, and google for error resolutions ðŸ˜Š)
_________________________________________________________________________________________________________________________________________________
#15/01/2021
..laravel testing tutorial
	..factory with seeder
	..looking into docs for reference
	..
_________________________________________________________________________________________________________________________________________________
#01/02/2021
...feature/candidate_table

{{
	git flow init 

	git flow feature start MYFEATURE (new feature branch based on 'develop')

	git flow feature finish MYFEATURE (
		    	Merges MYFEATURE into 'develop'
    			Removes the feature branch
   			 	Switches back to 'develop' branch
				)

    git flow feature publish MYFEATURE  (Publish a feature to the remote server )

    git flow feature pull origin MYFEATURE (Get a feature published by another user. )

    git flow feature track MYFEATURE (You can track a feature on origin by using )

    git flow release start RELEASE [BASE]  ( creates a release branch created from the 'develop' )

    git flow release publish RELEASE (allow release commits by other developers.)

    git flow release track RELEASE (track it)


    git flow release finish RELEASE (
  						  Merges the release branch back into 'master'
    					  Tags the release with its name
                          Back-merges the release into 'develop'
                          Removes the release branch
                           )

    git push origin --tags (push the tags)

}}

..migration,,,,model,,,,,factory,,,,,,,seeder of candidate


####
changes#
indentation
json
name snake case table/column
length of columns
####

_________________________________________________________________________________________________________________________________________________
#02/02/2021

((
let commit messages be descriptive
let comment on PR be descriptive
after PR check and resolve conflicts and push it! :)
))

Candidate API
1.list all candidates
2.find a candidate
3.delete a candidate(on the way)

_______________________________________________________________________________________________________________________________________________
#03/02/2021

1.delete method problem to be solved
2.show method problem of two records to be solved // solved by removing unncessary find query
3.ADD and UPDATE to be done

####Issue####
setup

# git setup
'git clone https://github.com/Improwised/apricot-2.git'
'git flow init'
'git flow feature checkout candidate_api' (((
	if do not work then, 'git branch feature/candidate_api'
						 'git flow feature checkout candidate_api'
						 'git flow feature pull origin candidate_apiz'
)))

# docker-mysql setup
'docker run --name docker-mysql -v /dockermysqldata:/var/lib/mysql -p 3306:3306/tcp -c 900 -e MYSQL_ALLOW_EMPTY_PASSWORD=yes -d mysql:5.7.9'

(Optional Docker permissions)
```sh
sudo groupadd docker
sudo gpasswd -a ${USER} docker
sudo systemctl enable docker
sudo systemctl start docker
newgrp docker
```
# Start the docker
'docker start docker-mysql'

# Laravel setup ('cd app' then type following commands)
'composer update --no-scripts'

make database 'apricot2' in mysql
rename '.env.example' to '.env' and change DB_NAME to apricot2

run following commands
'php artisan migrate'
'php artisan db:seed'


#reproducing issue
1.php artisan serve
2.send 'http://127.0.0.1:8000/api/v1/candidates/{key_from_database}' with 'delete' method from 'POSTMAN'
this will not update 'deleted_at' field in 'candidates' table(which it should do).

##############

_______________________________________________________________________________________________________________________________________________
#04/02/2021

candidate_api_fix //did not work
test cases
(((
1.fetch all candidates
2.fetch specific candidate
3.validate update	name
			email
			contact_no
			education
			college
			experience
			last_company
4.record is inserted successfully
5.record is validated before insertion
6.record is deleted

)))




_______________________________________________________________________________________________________________________________________________
#05/02/2021

"Do not do work in hurry, It may break things!!!"

/vendor/laravel/framework/src/Illuminate/Database/SQLiteConnection.php:88
original.....use Doctrine\DBAL\Driver\PDOSqlite\Driver as DoctrineDriver;
path of new DBAL........\vendor\doctrine\dbal\src\Driver\PDO\SQLite\Driver
(((define require->doctrine->2.4.2  then 'composer update')))

rename_candidate_id migration for fix of DELETE/UPDATE issue.

test cases written.
_______________________________________________________________________________________________________________________________________________
#08/02/2021

..made changes
	..key variable separated
	..asserts separated

..swagger docs created
..updated insert method to return all
..updated test case accordingly
_______________________________________________________________________________________________________________________________________________
#09/02/2021

..new issue api/database for stages
(((
why key size should be mentioned?
what common format should be used? for all api?
change the migration for key size directlty.
only name and email are required.
)))
..candidate_api needs store return changes...key

MODEL/MIGRATION/FACTORY/SEEDER done
API done
test cases started
_______________________________________________________________________________________________________________________________________________
#10/02/2021

"make commit/change"
..reading resource and collection docs

_______________________________________________________________________________________________________________________________________________
#11/02/2021
..API change
	..response structure change with error handling and resource collection
_______________________________________________________________________________________________________________________________________________
#12/02/2021
..candidate migration change
"Do not spend too much time to make it perfect, I will tell you if there are any changes"
..API and Swagger changes of candidate_api done
..test cases changes in candidate_api done
..swagger docs additions done.
_______________________________________________________________________________________________________________________________________________
#15/02/2021
..Stages_api_database API changed, Swagger docs added.
..test cases added
_______________________________________________________________________________________________________________________________________________
#16/02/2021
..Revising git
..reproduced same error in multiple ways
..reproduced issue again and again

_______________________________________________________________________________________________________________________________________________
#17/02/2021

..git revision
..Resource fully integrated with response of success and failure(common exceptions)
_______________________________________________________________________________________________________________________________________________
#18/02/2021
..insert/update unprocessable entity with exception
..test case for soft delete
..candidate_api_fix cherry-pick
..delete...200 ..structure
	..test case
	..swagger
test cases 
	..unprocessable
	..400

_______________________________________________________________________________________________________________________________________________
#19/02/2021
//success....cotroller/success
//failure....handler/failure
stage_api_database merged :) 
candidate_api response and test cases 
_______________________________________________________________________________________________________________________________________________
#22/02/2021
..candidate_api_fix  swagger done
..
"Register component before you use it!" :)!

_______________________________________________________________________________________________________________________________________________
#23/02/2021
..learn Vue	
	..component
		..data becomes data()
		..props to pass data
	..computed
	..methods
	..data
	..bind
	..model
..learn nuxt
	..pages
	..
_______________________________________________________________________________________________________________________________________________
#24/02/2024
..form build for registration
..candidate_table_structure_change  migration added//factory changes for it.
_______________________________________________________________________________________________________________________________________________
#25/02/2021
..initiate candidate API
..form done//some error in communication
_______________________________________________________________________________________________________________________________________________
#26/02/2021
..working on axios to insert data into database..








_______________________________________________________________________________________________________________________________________________


..we can make a form for candidate to register them selves,(using candidate_api)
	1.home made form
	2.google form data transfered to our server using API
	3.
..after that HR can approve candidate , that will initiate the process(using initiate_candidacy{which is remaining to build})
	

..initiate_candidate issue
	..create migration for candidate table's  structure change	
	..create initiate_api
	..connect to form