//May , June
_______________________________________________________________________________________________________________________________________________
#04/05/2021
..register ui fix #MergedToDevelop
..research on webhook on google forms
_______________________________________________________________________________________________________________________________________________
#05/05/2021
..webhook done... remaining to make API and integrate
(((
    ..when it gives errors means you are a newbie, but when it does not give error does not mean you are an expert🤔(code should work as expected and last thing, it should be effecient😄)
    ..
)))
_______________________________________________________________________________________________________________________________________________
#07/05/2021
..questionnaire submission store api done

_______________________________________________________________________________________________________________________________________________
#10/05/2021
..test cases/swagger done
..docs for webhook created
_______________________________________________________________________________________________________________________________________________
#11/05/2021
..Google Form webhook totally working
..added instructions for form webhook
..show API,test case, swagger ...que_sub all done
_______________________________________________________________________________________________________________________________________________
#12/05/2021
..(Conclusion)CandidacyHistory -> `createFromData` function is not needed.
..Changes in stage assignment questionnaire code added
_______________________________________________________________________________________________________________________________________________
#13/05/2021
..test cases added for questionnaire type in stage assignment
..removed code of creating questionnaire from que_sub controller and test cases.
..found method for response URL
_______________________________________________________________________________________________________________________________________________
#14/05/2021
..URL to key....controller/swagger/test
..stage assignment questionnaire ..removed creation code
..instructions updated.
..stage assignment ...que_key from metadata of Stage
_______________________________________________________________________________________________________________________________________________
#17/05/2021
..merge conflict solved...questionnaire store API
..questionnaire index api done
..stage store fixes for questionnaire
..
_______________________________________________________________________________________________________________________________________________
#21/05/2021
..seting up VM
_______________________________________________________________________________________________________________________________________________
#24/05/2021
..migrate errors, DB setup, Token setup, 
..stage store...validation added
..questionnaire store api conflicts solved
..(strange network issues while opening frontend)...in progress

_______________________________________________________________________________________________________________________________________________
#25/05/2021
..setup laptop
..questionnaire store api #MergedToDevelop
..stage assignment questionnaire fix #MergedToDevelop
..stage store api changes #MergedToDevelop
..
_______________________________________________________________________________________________________________________________________________
#26/05/2021
..completed stage add modal(minor issue remaining)
_______________________________________________________________________________________________________________________________________________
#27/05/2021
..previouse questionnaire showing
_______________________________________________________________________________________________________________________________________________
#28/05/2021
..All changes done ..bugs solved
..update api changes
_______________________________________________________________________________________________________________________________________________
#31/05/2021
..test cases for update api changes
..test cases for UI added
_______________________________________________________________________________________________________________________________________________
#01/06/2021
..test cases completed
_______________________________________________________________________________________________________________________________________________
#02/06/2021
..PR 173 done
..PR 224 done, added validation,  edit-delet toast fix, lint fixes
..confirm delete and test case fix for it
_______________________________________________________________________________________________________________________________________________
#03/06/2021
..validation improvement
_______________________________________________________________________________________________________________________________________________
#04/06/2021
..validation testcase 
..delete component added + test case changes PR 224 #MergedToDevelop
_______________________________________________________________________________________________________________________________________________
#07/06/2021
..backend is done, resumes are retrieved in new page
..
_______________________________________________________________________________________________________________________________________________
#08/06/2021
..now resumes shows in both edit and _id
..resumes with add button
_______________________________________________________________________________________________________________________________________________
#09/06/2021
..add and delete button working ,,backend integration working//edit candidate
..test case started
_______________________________________________________________________________________________________________________________________________
#10/06/2021
..test cases done
_______________________________________________________________________________________________________________________________________________
#11/06/2021
..changes(now plan has changed🙄🤔😂)
..validation added
(((
    ...don't just code that just works and looks just usable.......build a product of your dreams.
    ...why did you do this?(don't ask this to others , ask yourself)
)))
_______________________________________________________________________________________________________________________________________________

(((
..make small PRs so that it is easy for reviewers to review and other tasks are blocked because of that and can be merged quickly.
..technology , you can learn from docs and resources, but iteration/process you learn on actual project.
..keep mind open and do not repeat the mistakes. Dont just think the solution to the task, also see the flow.
..give yourself timelimit...keep decreasing as you learn more about it..measure the expected vs actual output.
..review your code before giving for review.  two steps.1.far sight, .2.near sight.
..when it becomes routine...learning comes from mistakes rather new things.
..for better time utilization, write quality code not quantitty code. and for writing quality code use more brain rather using more hands and mouth.(it is observed that when I use my brain that time I forget to use hands and mouth.)
..treat everyone with respect. even in normal conversation.
..while reviewing use the word "please". (I don't know why, but it feels good.)
..after doing changes test it manually :( 
..Problem, Cause, Solution.
..Don't be furious even if deadline is coming. keep brain calm, focused, open minded.||(When it is really serious, don't take it seriously. Just try what you can.)
..test cases are like I am playing with what I've build.(I should feel playing while developing it also.)
..do not use negative words(e.g. changes!!!error!!! why he gave such changes?!!! there are too many errors!!! It's a whole lot of headache.😑)
instead use positive words(e.g. WOW! I haven't played with errors many days, Let's go outside and play with errors.🙂)[WARNING: this does not change the situation, but it our brain gets space to think]
..framework gives direct helpers to calculate something that you were trying to do manually from scratch.(tip for beginner only)
..visualize it, make it actionable.(do not forget to take action😅)
..he said separate PRs so that changes can be merged ASAP.
..when you become senior dev, do not be too confident about "code improvement" you do in other's(mostly junior's) code.
..when you comment on a code to be changed, keep it in somewhere personal record tracking(list) also so that it reminds the changes.
..think of possible errors.(novice tip)
..test cases.. logic is good but show it clearly what it tests.
..we can't stay stuck at a point, we have to move out. And that's where people skills(stay productive and make others productive as well using physlg)(In short we have to make the work, that's why we are here.) come into picture.
..time was for IQ, then now is EQ, SQ stays all the time.(visible effect changes as per time)
..ask question to yourself what?how?why? etc. problem arises when we build(or some work, not while sleeping.).[ask questions(solve problem) yourself rather then depending on others, because in future you need to answer many questions. One who can answer questions will grow.]
..learn how to understand others perspective and learn how to explain others so they can get it clearly.
..plan, execute, evaluate. based on evaluation re-plan, re-execute, re-evaluate. stay in loop to improve. 
..making it complex(anyone can do it, easily.),making it simple(it takes some efforts.)
..give credits to others whenever possible.
..DBMS..can answer some complex questions in less time.| CP..when you know best logic then you don't waste resources.
..DSA..because I like small sized and fast apps.
..setting deadline for tasks keeps our focus in task.(it would be great if we set unreasonable/impossible deadline and then try to make it. like playing a game...may be god knows..we should try atleast)
..we can make some python/shell/php scripts to make our life less repetitive.  
..repetitive task means boredom.... lets have a roller coaster
..BUG!!!..reproduce(write test case), fix(fix the bug in code), test(reproduce->patch)
..Work->work log
..there are only two options... learn new, or repeat. repeating is good as it is told that "practice makes man better" - practice means repeating for improvement. [third option is timepass, which is not useful!!😑]
..when you feel stuck..(1).open new gedit and write down why you are not feeling good. what problem are you facing etc. (2).asking random questions might help. (file should be new, after conclusion it can be saved.)
..was the time worth it?
..Tickets .. what is currently happening(or happened) .. and next what to do. (reason and solution)
..first research yourself, then ask for help.
..Always be respectful, Never be blamming.
..Don't get into habit of joking like "I am not gonna do it" | "I don't care whatever happens... Let it be on fire!!!"
..(plan,execute,evaluate||repeat)->[limit & goal||outcome,reason]
..how to manage fellows.. not too strict that they can't work at their 100%, not too liberal that their energy is totally wasted.(riding a 4 stroke bike for example... gear should change with speed, some acceleration, some breaks ... you know it well 🙂)
..don't find mistakes in their beliefs and their way of living, cause it hurts. But you can talk about their performance, the way they approach a problem/task(you must do it, cause it affects the work).
..What are you here for? and what are you doing?
..All things working fine even I don't put my 100% ("but you will get extra if you go _beyond 100%_")
..Don't take anything too serious(doing so can make situation out of control/we are not able to think properly). Don't take anything too lightly(doing so will lead to minor mistakes that causes failure).
..Everything is boring, running behind the so called interesting things are even worst(Dopamine loop, false hopes).The way to live life is enjoy boring things.
..Are you the guy who keep thinking and stuck and not trying and thinking like "this will happen" "this happens this way, so it wont work"... Rushabh said to Bhautik today: (for coding/development)"Try the stupid of stupid idea, so that we are sure that the given idea does not work"(original: stupid ma stupid lagtu hoy to bi try karvanu etle e khabar padi jay ke aam no thaay)
..(plan,execute,evaluate||repeat)->[limit & goal||outcome,reason]
..active involvement leads to either questions or clear understanding. Otherwise there will be situation of "let it be so" "ok, ok, ok ......". Active involvement comes from what???
..Don't make joke of seniors. Some your juniors might do it with you, but you should not do it.(It does not feel good)
..If you feel good when someone helps you or behave good with you, you should behave well with others also. If you don't like someone making joke on you, you should not make joke on someone.
..power comes with responsibility. responsibility is given to whom who has capability(or you can say power). And to develop capability(or power), start taking responsibilities(or initiatives)
..IT field... being creative is fulfilling otherwise it is boring. (but that creativity should get some value to peoples's life, right? 🤔...even you are not bringing value, still you are learning new things if you are creative.....but no-one will pay if it does not bring value to someone.) (!!!DO REMEMBER ... एक दिन सब छोडके जाना है।)
..Auto-complete is bad feature if you depend on it. (but it could be better if we learn from it?🤔)
..getout common things....else code will suffer when there is a change.
{
-> The Basics
..Only project/product which delivers value in real world, is for what peoples pay.
..You are having time flexibility does not mean you misuse or waste it....also same for other benefits given to you.
    ..if you waste or misuse the benefits, productivity will decrease, then output will decrease, no client will pay for it.
    ..instead utilize those benefits for learning and being more productive, hence you get client's satisfaction hence they will pay you.
    ..#there_is_no_alternative_to_hard_work  .. all have to go through it.
    ..that does not mean you work hard enough and get burned out. That will cause more problems and hard earned money will go back into fixing those problems.
    ..#give_your_100_not_1_less_not_1_more
    ..we should do work of such quality, that client does not count on time..... otherwise you would be fulfilling time shift but client will go away.  
}
..some fools think they are being paid based on work time logger. That might seem temporarily true, but in long run, work done(or atleast work put in the task) is main thing.
    ..simple explanation: work->money (and for work you need knowledge as per work requirement)
..comparison..?? pros and cons?? how to use it??
..\
)))
